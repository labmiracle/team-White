version: "3.8"
services:
  database:
    image: database:${TAG}
    build:
      context: ../
      dockerfile: docker/database.dockerfile
    volumes:
      - db_data:/var/lib/mysql
    restart: unless-stopped
    #ports:
    #  - "${DATABASE_PORT}"
    environment:
      - MYSQL_ROOT_PASSWORD=${DATABASE_PASSWORD}

  api:
    image: api:${TAG}
    restart: unless-stopped
    build:
      context: ../
      dockerfile: docker/api.dockerfile
    #ports:
    #  - "5000:5000"
    environment: 
     - paradigm_api__mysql__user=root
     - paradigm_api__mysql__password=${DATABASE_PASSWORD}
     - paradigm_api__mysql__host=database
     - paradigm_api__mysql__port=3306
     - paradigm_api__mysql__database=paradigm_api_db
     - paradigm_api__mysql__multipleStatements=true
    depends_on:
      - database

  nginx:
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - ./nginx:/etc/nginx/conf.d
      #- ./certbot/conf:/etc/letsencrypt
      #- ./certbot/www:/var/www/certbot
    ports:
      - "127.0.0.1:8080:80"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  
  #certbot:
  #  image: certbot/certbot
  #  restart: unless-stopped
  #  volumes:
  #    - ./data/certbot/conf:/etc/letsencrypt
  #    - ./data/certbot/www:/var/www/certbot
  #  entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  db_data: {}